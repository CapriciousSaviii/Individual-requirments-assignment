
# Each use case should contain the following elements:

## Title 
Augur-Study


## Description 
Augur is a software suite that is used for collecting data from free and open-source software communities, They trace data from a group of repositarties,
which are then made into a data model, which are then analyzed to provide certain metrics about data. This is very important to devlopers today because 
they really want to know about the progress and metrics about the project, which could be used to make decisions on if the project is sustainabile or not.
It could also be used to see how well a team is doing on the project and if the quality of their work is at a level which they want or not.


## Triggers 
1. The devlopers agree to come together and make use of augur's abilities, then they add all their repositaries to augur, which will then evaluate the 
health and sustainability of the project, and provide data to teh devlopers.
2. An executive wants to use augur to make sure that the quality of work that his team is doing is of an approvable level. 



## Actors 
1. Managers
2. Devlopers
3. Clients


## Preconditions 
1. Github repositaries.
2. Devloped projects.
3. User can see the reseults of the data model.



## Main Success Scenario (Goals)
1. The user provides valid github repositaries.
2. They're combined intoa working data model.
3. They're displayed to the user properly.



## Alternate Success Scenarios 
1. None


## Failed End Condition 
1. The provided URL goes to a GitHub that doesn't exist so the dat model cannot be created so an error message is sent.
2. There isn't proper data to provide metrics on the project.
3. The user isn't properly able to view the results of the data model.

## Extensions
1. To be able to compare the diffrent metric between the repositaries.

## Steps of Execution (Requirements)
1. A URL that leads to a GitHub repositary is sent into augur.
2. Augur then creates a data model after analyzing the repositaries.
3. This data is then shown to the user.

## A use case diagram
(following the UML Standard for expressing use cases.)


## Dependent Use Cases
